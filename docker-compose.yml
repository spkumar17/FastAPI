services:

  backend:
    build:
      context: .
      dockerfile: dockerfile
    container_name: backend_container
    ports:
      - "8000:8000"
    networks:
      - API_network
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=Cloud
      - DB_NAME=FastAPI
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=120
    depends_on:
      - postgresql

  postgresql:
    image: postgres:latest
    container_name: postgres_container
    ports:
      - "5432:5432"
    networks:
      - API_network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Cloud
      - POSTGRES_DB=FastAPI
    volumes:
      - API-data:/var/lib/postgresql/data

networks:
  API_network:
    driver: bridge

volumes:
  API-data:
    driver: local

# make sure to run the following command to start the containers
# docker-compose up -d
# make sure to run the following command to stop the containers
# docker-compose down
# make sure to run the following command to remove the containers
# docker-compose rm
# make sure to run the following command to remove the volumes
# docker volume rm API-data
# make sure to run the following command to remove the networks
# docker network rm API_network
# make sure to run the following command to remove the images
# docker rmi backend_container
# make sure to run the following command to remove the containers and volumes
# docker-compose down -v
# make sure to run the following command to remove the containers and networks
# docker-compose down --volumes --remove-orphans    